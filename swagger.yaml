swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts/{accountId}/transactions: # visualisation de toutes les transactions pour le mois en cours, groupées par compte
    get:
      tags:
      - Transactions de l'utilisateur
      summary: Transactions
      description: API pour récupérer toutes les transactions du mois en cours pour un compte utilisateur
      # logique serveur si non codé en dure 
  #     parameters:
  # - in: query
  #   name: start_date
  #   type: string
  #   format: date
  #   required: true
  #   description: Début du mois pour lequel les transactions sont requises.
  # - in: query
  #   name: end_date
  #   type: string
  #   format: date
  #   required: true
  #   description: Fin du mois pour lequel les transactions sont requises.
      parameters:
      - in: header
        name: Authorization
        description: joindre le jeton JWT Bearer pour authentification
        type: string
        required: true
      - in: path
        name: accountId
        description: Identifiant numérique du compte utilisateur
        type: integer
        required: true
      responses:
        '200':
          description: Transaction retrieved successully
          schema:
            $ref: '#/definitions/Transactions'
        '400': #Vérifiez que tous les champs requis sont correctement fournis et valides.
          description: Bad request
        '401': # Le jeton JWT fourni est invalide ou expiré.
          description: Unauthorized
        '500': # Un problème est survenu côté serveur lors du traitement de la requête.
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionsId}: # visualisation d'une transaction spécifique pour un compte
    get:
      tags:
      - Transactions de l'utilisateur
      summary: Détails de la transaction
      description: API pour obtenir les détails d'une transaction spécifique associée à un compte
      parameters:
      - in: header
        name: Authorization
        description: Joindre le jeton JWT Bearer pour authentification
        type: string
        required: true
      - in: path
        name: accountId
        description: Identifiant numérique du compte de l'utilisateur
        type: integer
        required: true
      - in: path
        name: transactionsId
        description: Identifiant numérique de la transaction spécifique à récupérer
        required: true
        type: integer
      responses:
        '200':
          description: Transaction retrieved successully
          schema:
            $ref: '#/definitions/Transactions'
        '400': #Vérifiez que tous les champs requis sont correctement fournis et valides.
          description: Bad request
        '401': # Le jeton JWT fourni est invalide ou expiré.
          description: Unauthorized
        '500': # Un problème est survenu côté serveur lors du traitement de la requête.
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionsId}/category: # Visualisation et mise à jour de la catégorie d'une transaction
    patch:
      tags:
      - Transactions de l'utilisateur
      summary: Mise à jour de la catégorie d'une transaction 
      description: API pour mettre à jour la catégorie d'une transaction spécifique
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: Authorization
        description: Joindre le jeton JWT Bearer pour authentification
        type: string
        required: true
      - in: path
        name: accountId
        description: Identifiant numérique du compte de l'utilisateur
        type: integer
        required: true
      - in: path
        name: transactionsId
        description: Identifiant numérique de la transaction à mettre à jour
        required: true
        type: integer
      - in: body
        name: body
        required: true
        description: Données nécessaires pour mettre à jour la catégorie de la transaction
        schema:
            $ref: '#/definitions/TransactionsUpdateCategory'
      responses:
        '200':
          description: Transaction retrieved successully
          schema:
            $ref: '#/definitions/Transactions'
        '400': #Vérifiez que tous les champs requis sont correctement fournis et valides.
          description: Bad request
        '401': # Le jeton JWT fourni est invalide ou expiré.
          description: Unauthorized
        '500': # Un problème est survenu côté serveur lors du traitement de la requête.
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionsId}/notes: # Visualisation et mise à jour d'une note d'une transaction
    patch:
      tags:
      - Transactions de l'utilisateur
      summary:  Mise à jour des notes d'une transaction
      description: API pour mettre à jour les notes associées à une transaction spécifique
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: Authorization
        description: Joindre le jeton JWT Bearer pour authentification
        type: string
        required: true
      - in: path
        name: accountId
        description: Identifiant numérique du compte de l'utilisateur
        type: integer
        required: true
      - in: path
        name: transactionsId
        description: Identifiant numérique de la transaction dont les notes doivent être mises à jour
        required: true
        type: integer
      - in: body
        name: body
        required: true
        description: Informations nécessaires pour mettre à jour les notes de la transaction
        schema:
            $ref: '#/definitions/TransactionsUpdateNotes'
      responses:
        '200':
          description: Transaction retrieved successully
          schema:
            $ref: '#/definitions/Transactions'
        '400': #Vérifiez que tous les champs requis sont correctement fournis et valides.
          description: Bad request
        '401': # Le jeton JWT fourni est invalide ou expiré.
          description: Unauthorized
        '500': # Un problème est survenu côté serveur lors du traitement de la requête.
          description: Internal Server Error
securityDefinitions:  # méthodes de sécurité utilisées pour accéder aux API
  Bearer: #  l'API utilise un token Bearer comme méthode d'authentification
    type: apiKey
    name: Authorization
    in: header
definitions: #  schémas qui définissent la structure des données échangées entre le client et le serveur
  User: # Définit les propriétés d'un utilisateur
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transactions:
    type: object
    properties:
      transactionsId:
        type: integer
        format: int64
      date:
        type: string
      description:
        type: string
      amount:
        type: number
      currency:
        type: string
      type:
        type: string
      category:
        type: string
      notes:
        type: string
  TransactionsUpdateCategory:
    type: object
    properties:
      category:
        type: string
  TransactionsUpdateNotes:
    type: object
    properties:
      notes:
        type: string